version: 2.1
orbs:
  node: circleci/node@5

jobs:
  # Job for building the project
  build:
    executor: node/default
    steps:
      - checkout
      - run: echo "Building things..."

  # Job for running unit tests with Jest
  unit_tests:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test:ci
      - store_test_results:
          path: ./test-results/

  # Job for deploying to development environment
  deploy_dev:
    executor: node/default
    steps:
      - checkout
      - run: echo "Deploying to development environment..."

  # Job for deploying to production environment
  deploy_prod:
    executor: node/default
    steps:
      - checkout
      - run: echo "Deploying to production environment..."

  # Job for managing team members
  manage_members:
    executor: node/default
    steps:
      - checkout
      - run: echo "Managing team members..."
      - run:
          name: Assign roles to team members
          command: |
            echo "Assigning roles via CircleCI API..."
            curl -X POST https://circleci.com/api/v2/organization/{org_id}/member \
            -H "Circle-Token: $CIRCLECI_API_TOKEN" \
            -d '{"email": "newmember@example.com", "role": "developer"}'

  # General deploy job
  deploy:
    executor: node/default
    steps:
      - checkout
      - run: echo "Deploying..."
    when: on_success

workflows:
  version: 2

  build-test-deploy:
    jobs:
      - build
      - unit_tests:
          requires:
            - build
      - deploy_dev:
          requires:
            - unit_tests
          filters:
            branches:
              only:
                - develop
      - deploy_prod:
          requires:
            - unit_tests
          filters:
            branches:
              only:
                - main
      - manage_members:
          requires:
            - unit_tests
      - deploy:
          requires:
            - unit_tests
