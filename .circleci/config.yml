version: 2.1

orbs:
  node: circleci/node@5

jobs:
  build:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-modules-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: echo "✅ Build process completed."

  lint:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-modules-{{ checksum "package-lock.json" }}
      - run: npm install
      - run: echo "🔍 Running ESLint..."
      - run:
          name: "Run ESLint"
          command: npm run lint || echo "⚠ ESLint found issues, but continuing..."
      - run: echo "✅ Linting completed."

  integration_tests:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-modules-{{ checksum "package-lock.json" }}
      - run: npm install
      - run: echo "🧪 Running integration tests..."
      - run: echo "✅ Integration tests completed."

  deploy_dev:
    executor: node/default
    steps:
      - checkout
      - run: echo "🚀 Deploying to development environment..."

  deploy_prod:
    executor: node/default
    steps:
      - checkout
      - run: echo "🚀 Deploying to production environment..."

  manage_members:
    executor: node/default
    steps:
      - checkout
      - run: echo "👥 Managing members process started..."

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - lint:
          requires:
            - build
      - integration_tests:
          requires:
            - lint
      - deploy_dev:
          requires:
            - integration_tests
          filters:
            branches:
              only:
                - develop
                - feature/*
                - hotfix/*
      - deploy_prod:
          requires:
            - integration_tests
          filters:
            branches:
              only: main
      - manage_members:
          requires:
            - deploy_dev
